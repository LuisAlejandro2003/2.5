
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ERR ID INT LE NUM OUT PLUSPLUS PR PRINTLN STRING SYM SYSTEMstatement : PR "(" INT ID "=" NUM ";" ID LE NUM ";" ID PLUSPLUS ")" "{" statement_block "}"statement_block : statement\n                       | statement statement_blockstatement : SYSTEM "." OUT "." PRINTLN "(" STRING ")" ";"'
    
_lr_action_items = {'PR':([0,19,25,27,28,],[2,-4,2,2,-1,]),'SYSTEM':([0,19,25,27,28,],[3,-4,3,3,-1,]),'$end':([1,19,28,],[0,-4,-1,]),'(':([2,11,],[4,13,]),'.':([3,7,],[5,9,]),'INT':([4,],[6,]),'OUT':([5,],[7,]),'ID':([6,14,21,],[8,16,22,]),'=':([8,],[10,]),'PRINTLN':([9,],[11,]),'NUM':([10,18,],[12,20,]),';':([12,17,20,],[14,19,21,]),'STRING':([13,],[15,]),')':([15,23,],[17,24,]),'LE':([16,],[18,]),'}':([19,26,27,28,29,],[-4,28,-2,-1,-3,]),'PLUSPLUS':([22,],[23,]),'{':([24,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,25,27,],[1,27,27,]),'statement_block':([25,27,],[26,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PR ( INT ID = NUM ; ID LE NUM ; ID PLUSPLUS ) { statement_block }','statement',17,'p_statement_for','analizadorlss.py',62),
  ('statement_block -> statement','statement_block',1,'p_statement_block','analizadorlss.py',66),
  ('statement_block -> statement statement_block','statement_block',2,'p_statement_block','analizadorlss.py',67),
  ('statement -> SYSTEM . OUT . PRINTLN ( STRING ) ;','statement',9,'p_statement_print','analizadorlss.py',71),
]
